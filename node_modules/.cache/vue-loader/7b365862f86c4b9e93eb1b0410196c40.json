{"remainingRequest":"D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Repos\\kurs-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Repos\\kurs-master\\src\\components\\SubstationPage\\DistributionPointPage.vue?vue&type=template&id=2627153f&","dependencies":[{"path":"D:\\Repos\\kurs-master\\src\\components\\SubstationPage\\DistributionPointPage.vue","mtime":1604250428000},{"path":"D:\\Repos\\kurs-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Repos\\kurs-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}