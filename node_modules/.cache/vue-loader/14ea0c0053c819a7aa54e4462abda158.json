{"remainingRequest":"D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Repos\\kurs-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Repos\\kurs-master\\src\\components\\SubstationPage\\SingleTrPage.vue?vue&type=template&id=20e19521&","dependencies":[{"path":"D:\\Repos\\kurs-master\\src\\components\\SubstationPage\\SingleTrPage.vue","mtime":1604250428000},{"path":"D:\\Repos\\kurs-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Repos\\kurs-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Repos\\kurs-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}