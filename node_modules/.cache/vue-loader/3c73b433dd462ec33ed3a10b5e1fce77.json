{"remainingRequest":"C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\NewE\\projects\\KURS\\kursFront\\src\\components\\ClientsPage\\ClientsPage.vue?vue&type=template&id=3632f482&scoped=true&","dependencies":[{"path":"C:\\NewE\\projects\\KURS\\kursFront\\src\\components\\ClientsPage\\ClientsPage.vue","mtime":1664248835119},{"path":"C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664248823892},{"path":"C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1664248833952},{"path":"C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664248823892},{"path":"C:\\NewE\\projects\\KURS\\kursFront\\node_modules\\vue-loader\\lib\\index.js","mtime":1664248833951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}